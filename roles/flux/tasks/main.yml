---
- name: include amd64 arch vars
  include_vars: amd64.yml
  when: ansible_architecture == 'x86_64'

- name: include arm arch vars
  include_vars: arm.yml
  when: ansible_architecture == 'armv7l'

- name: include arch vars
  include_vars: arm64.yml
  when: ansible_architecture == 'aarch64'

- name: Install fluxctl
  get_url:
    url: "https://github.com/fluxcd/flux/releases/download/{{ flux_version }}/fluxctl_linux_{{ flux_arch }}"
    dest: /usr/local/bin/fluxctl
    mode: 0755

- name: Check if Flux Helm CRD is installed
#  command: kubectl get crd helmreleases.flux.weave.works
  command: kubectl get crd helmreleases.helm.fluxcd.io
  changed_when: False
  failed_when: False
  register: flux_helm_crd

- name: Install Flux Helm CRD
  #command: kubectl apply -f https://raw.githubusercontent.com/fluxcd/flux/helm-0.10.1/deploy-helm/flux-helm-release-crd.yaml
  command: kubectl apply -f https://raw.githubusercontent.com/fluxcd/helm-operator/master/deploy/flux-helm-release-crd.yaml
  when: flux_helm_crd.rc != 0

- name: Create Flux namespace
  k8s:
    name: flux
    api_version: v1
    kind: Namespace
    state: present

- name: Create Flux private ssh key secret
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: flux-git-auth
        namespace: flux
      data:
        identity: "{{ (lookup('file', '{{ role_path }}/files/flux_ssh_key') + '\n') | b64encode }}"
      type: Opaque
    validate:
      fail_on_error: yes
      strict: yes

- name: Check Helm Flux repo
  shell: helm repo list | grep fluxcd | awk '{print $1" "$2}'
  changed_when: False
  register: helm_repo_list

- name: Add Helm Flux repo
  command: helm repo add fluxcd https://charts.fluxcd.io
  when: '"fluxcd https://charts.fluxcd.io" not in helm_repo_list.stdout_lines'
  notify: helm_repo_update

- meta: flush_handlers

- name: Check Helm releases
  command: helm list -q
  changed_when: False
  register: helm_list_results

- name: Install Flux via Helm (no check to see if it exists)
  shell: >
    helm upgrade -i flux \
      --set helmOperator.create=true \
      --set helmOperator.createCRD=false \
      --set git.user={{ flux_git_user }} \
      --set git.email={{ flux_git_email }} \
      --set git.url={{ flux_git_url }} \
      --set git.branch={{ flux_git_branch }} \
      --set git.path={{ flux_git_path }} \
      --set git.secretName=flux-git-auth \
      --set git.pollInterval={{ flux_git_poll_interval }} \
      {% if flux_image_repository is defined %}--set image.repository={{ flux_image_repository }}{% endif %}
      {% if flux_image_tag is defined %}--set image.tag={{ flux_image_tag }}{% endif %}
      --namespace flux \
      --wait \
      fluxcd/flux
#  when: "'flux' not in helm_list_results.stdout_lines"

# consider adding export FLUX_FORWARD_NAMESPACE=flux to /root/.bashrc
# fluxctl list-workloads -a
# fluxctl sync

- name: Wait for Flux rollout
  command: kubectl -n flux rollout status deployment/flux
  changed_when: False

- name: Flux sync
  command: fluxctl --k8s-fwd-ns flux sync
  changed_when: False
  failed_when: False
  register: flux_sync

- name: Flux sync output
  debug:
    var: flux_sync
  when: flux_sync.rc != 0

- name: Install Flux Helm Operator via Helm (no check to see if it exists)
  shell: >
    helm upgrade -i flux-helm-operator \
      --set git.ssh.secretName=flux-git-auth \
      {% if flux_helm_operator_image_repository is defined %}--set image.repository={{ flux_helm_operator_image_repository }}{% endif %}
      {% if flux_helm_operator_image_tag is defined %}--set image.tag={{ flux_helm_operator_image_tag }}{% endif %}
      --namespace flux \
      --wait \
      fluxcd/helm-operator

- name: Wait for Flux Helm Operator rollout
  command: kubectl -n flux rollout status deployment/flux-helm-operator
  changed_when: False
