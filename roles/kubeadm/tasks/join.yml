---
- name: Create bootstrap token
  command: kubeadm token create
  register: k8s_join_token
  run_once: true
  delegate_to: "{{ groups['k8s'][0] }}"

- name: Create bootstrap certificate key
  shell: kubeadm init phase upload-certs --upload-certs  | grep "Using certificate key:" -A1 | tail -n 1
  register: k8s_join_certificate_key
  run_once: true
  delegate_to: "{{ groups['k8s'][0] }}"

- name: Retrieve certificate hash
  shell: openssl x509 -in /etc/kubernetes/pki/ca.crt -pubkey -noout | openssl pkey -pubin -outform DER | openssl dgst -sha256  | sed -e 's/^(stdin)= //'
  register: k8s_join_certificate_hash
  run_once: true
  delegate_to: "{{ groups['k8s'][0] }}"

- name: Join non-control-plane node to cluster
  shell: >
    kubeadm join "{{ hostvars[groups['k8s'][0]].ansible_default_ipv4.address }}:6443" \
      --token "{{ hostvars[groups['k8s'][0]].k8s_join_token.stdout }}" \
      --discovery-token-ca-cert-hash "sha256:{{ hostvars[groups['k8s'][0]].k8s_join_certificate_hash.stdout }}" \
      --certificate-key "{{ hostvars[groups['k8s'][0]].k8s_join_certificate_key.stdout }}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: not bootstrap

- name: Join control-plane node to cluster
  shell: >
    kubeadm join "{{ hostvars[groups['k8s'][0]].ansible_default_ipv4.address }}:6443" \
      --token "{{ hostvars[groups['k8s'][0]].k8s_join_token.stdout }}" \
      --discovery-token-ca-cert-hash "sha256:{{ hostvars[groups['k8s'][0]].k8s_join_certificate_hash.stdout }}" \
      --certificate-key "{{ hostvars[groups['k8s'][0]].k8s_join_certificate_key.stdout }}" \
      --control-plane
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: not bootstrap and k8s_control_plane
