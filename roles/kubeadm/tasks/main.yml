---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

#- name: set api port
#  set_fact:
#    k8s_api_port: "{{ '8443' if keepalived_vip else '6443' }}"

- name: Include keepalived tasks if vip is set
  include_tasks: keepalived.yml
  when: keepalived_vip is defined

#- name: Include haproxy tasks if vip is set
#  include_tasks: haproxy.yml
#  when: keepalived_vip is defined

- name: Disable swap since kubernetes can't work with swap enabled (1/2)
  shell: swapoff -a
  when: ansible_swaptotal_mb != 0

- name: Disable swap in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    backup: yes
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Install Python Pip
  package:
    name: python-pip
    state: present

- name: Install/Upgrade Python setuptools with Pip
  pip:
    name: setuptools
    state: present
    executable: pip
    version: "{{ '>3.3' | default(omit) }}"

- name: Install openshift Pip package
  pip:
    name: openshift
    state: present
  register: openshift_pip
  retries: 5
  until: openshift_pip is successful

- name: Install kubernetes-validate Pip package
  pip:
    name: kubernetes-validate
    state: present
  register: kubeval_pip
  retries: 5
  until: kubeval_pip is successful

- name: Upgrade more-itertools Pip package
  pip:
    name: more-itertools
    version: '>=5.0.0,<6.0.0'
  register: moreitertools_pip
  retries: 5
  until: moreitertools_pip is successful

- name: Install Docker
  package:
    name: "{{ docker_package }}"
    state: present

- name: Enable and Start Docker
  service:
    name: docker
    state: started
    enabled: yes

- name: sysctl bridge ip6tables
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: "1"
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: yes

- name: sysctl bridge iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: yes

- name: setup on RedHat
  include_tasks: redhat.yml
  when: ansible_os_family == 'RedHat'

- name: setup on Debian
  include_tasks: debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Kubernetes packages.
  package:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  notify: restart kubelet
  with_items: "{{ kubernetes_packages }}"

- name: Start kubelet service
  service:
    name: kubelet
    state: started
    enabled: yes

- name: kubeadm config images pull
  shell: kubeadm config images pull

- name: Bootstrap cluster
  include_tasks: bootstrap.yml
  when: bootstrap

- name: join nodes
  include_tasks: join.yml
  when: not bootstrap

- name: include untaint.yml
  include_tasks: untaint.yml
