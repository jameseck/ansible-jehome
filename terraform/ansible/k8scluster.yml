---
# install k8s packages for all nodes (plus bootstrap if first node in the group)
- hosts: k8s
  pre_tasks:
  - name: set cluster_domain fact
    set_fact:
      cluster_domain: "{{ (ansible_extra_vars | from_json).cluster_domain | default(ansible_fqdn) }}"
    when: ansible_extra_vars is defined
  roles:
  - role: kubeadm
    cluster_domain: "{{ cluster_domain }}"
    bootstrap: "{{ true if ansible_fqdn == groups['k8s'][0] else false }}"

# install flannel and then retrieve details for kubeadm join from k8s master for other nodes
- hosts: k8s[0]
  roles:
  - flannel
  tasks:
  - name: Create bootstrap token
    command: kubeadm token create
    register: k8s_join_token
  - name: Create bootstrap certificate key
    shell: kubeadm init phase upload-certs --upload-certs  | grep "Using certificate key:" -A1 | tail -n 1
    register: k8s_join_certificate_key
  - name: Retrieve certificate hash
    shell: openssl x509 -in /etc/kubernetes/pki/ca.crt -pubkey -noout | openssl pkey -pubin -outform DER | openssl dgst -sha256  | sed -e 's/^(stdin)= //'
    register: k8s_join_certificate_hash

# join the other nodes to the cluster
- hosts: k8s[1:]
  roles:
  - role: kubeadm_join
    token: "{{ hostvars[groups['k8s'][0]].k8s_join_token.stdout }}"
    cert_key: "{{ hostvars[groups['k8s'][0]].k8s_join_certificate_key.stdout }}"
    cert_hash: "sha256:{{ hostvars[groups['k8s'][0]].k8s_join_certificate_hash.stdout }}"
    master_api: "{{ hostvars[groups['k8s'][0]].ansible_default_ipv4.address }}:6443"

# install services onto the cluster
- hosts: k8s[0]
  roles:
  - localstorage
  - helm
  - nginx_ingress
  - cert_manager
  - root_ca
  - flux
  - gitlab
  - gitlab_runner
